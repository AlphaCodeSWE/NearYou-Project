# uso l'ultima versione, in caso di problemi uso la 3.8
version: "3.9" 
services:

#qui eseguo VS code che non è altro cge il server CodeSpaces,
# installo python, posso fare docker-compose logs, lanciare script..
app:
  image: python:3.10-slim   
  
  #l'host è la VM che Github CodeSpaces crea, dentro il container in /workspace
  volumes:
    -..:/workspace:cached
    
  #per far rimanere il container sempre in esecuzione:
  command: sleep infinity
  privileged: true
  
  ##########################################################
  #Zookeeper per Kafla : in quanto coordina i broker, obbligatorio l'uso
  zookeeper:
    image: bitami/zookeeper:latest 
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      -"2181:2181"
  ###########################################################

  #Kafka: broker per messagistica/streaming, invia e ricevo su porta 9092
  kafka:
    image:bitami/kafka:latest
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes #porta non cittografata
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    ###########################################################

    #HIVEMQ:
    hivemq:
    image: hivemq/hivemq-ce:latest
    container_name:hivemq
    ports:
      -"1883:1883" # porta mqtt standard
      -"8080:8080" # per Ui (in caso di adozione)
    #############################################################
    
    #APACHE Nifi: dataflow, orchesto le pipeline,
    #prendo i mex da hiveMQ, trasformo pubblici du kafla o contrario
    nifi:
    image: apache/nifi:latest
    environment:
      - NIFI_WEB_HTTP_PORT=8081
    ports:
      - "8081:8081"
    
      
      
  
  
  
  
