version: "3.9"

services:
  # Servizio app: utilizza Python 3.10 slim per eseguire le applicazioni Python
  app:
    image: python:3.10-slim
    volumes:
      - .:/workspace:cached
    command: sleep infinity
    privileged: true

  # Servizio Zookeeper: coordina i broker Kafka, obbligatorio per Kafka
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  # Servizio Kafka: broker per la messaggistica e lo streaming, porta 9093 per SSL
  kafka:
    image: bitnami/kafka:latest
    volumes:
      - ./certs:/certs
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=no
      - KAFKA_CFG_LISTENERS=SSL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=SSL://kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=SSL:SSL
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=SSL
      - KAFKA_CFG_SSL_KEYSTORE_LOCATION=/certs/kafka.keystore.jks
      - KAFKA_CFG_SSL_KEYSTORE_PASSWORD=${KAFKA_KEYSTORE_PASS}
      - KAFKA_CFG_SSL_KEY_PASSWORD=${KAFKA_KEYSTORE_PASS}
      - KAFKA_CFG_SSL_TRUSTSTORE_LOCATION=/certs/kafka.truststore.jks
      - KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD=${KAFKA_KEYSTORE_PASS}
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    ports:
      - "9093:9093"
    depends_on:
      - zookeeper

  # Servizio HiveMQ: broker MQTT, porta 1883 standard MQTT, porta 8080 per l'UI
  hivemq:
    image: hivemq/hivemq-ce:latest
    ports:
      - "1883:1883"
      - "8080:8080"

  # Servizio Apache NiFi: orchestratore di flussi di dati, porta 8081 per l'interfaccia web
  nifi:
    image: apache/nifi:latest
    environment:
      - NIFI_WEB_HTTP_PORT=8081
    ports:
      - "8081:8081"
